{
  "contractName": "LIBWrapper",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogETHUnwrapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogETHWrapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LIBToken",
      "outputs": [
        {
          "internalType": "contract LIB",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561006c565b611b5e806104a483390190565b6104298061007b6000396000f3fe6080604052600436106100345760003560e01c80631ba3192b14610039578063d46eb11914610064578063de0e9a3e1461006e575b600080fd5b34801561004557600080fd5b5061004e61008e565b60405161005b919061039f565b60405180910390f35b61006c61009d565b005b34801561007a57600080fd5b5061006c61008936600461034a565b61017e565b6000546001600160a01b031681565b600034116100c65760405162461bcd60e51b81526004016100bd906103b3565b60405180910390fd5b6000546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906340c10f19906101119033903490600401610386565b600060405180830381600087803b15801561012b57600080fd5b505af115801561013f573d6000803e3d6000fd5b505050507ff5bbfc7c33e2415d8412b58a8857448e349e08f7525154290968f731e86a90393334604051610174929190610386565b60405180910390a1565b6000811161019e5760405162461bcd60e51b81526004016100bd906103b3565b6000546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd906101eb90339030908690600401610362565b602060405180830381600087803b15801561020557600080fd5b505af1158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610323565b506000546040517f42966c680000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906342966c68906102879084906004016103ea565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156102e6573d6000803e3d6000fd5b507fcddf2ba03463888346c0f626e3eb138f5990b099f6148e05f58835082b5c1d7f3382604051610318929190610386565b60405180910390a150565b600060208284031215610334578081fd5b81518015158114610343578182fd5b9392505050565b60006020828403121561035b578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b6020808252601e908201527f5765206e65656420746f2077726170206174206c656173742031207765690000604082015260600190565b9081526020019056fea264697066735822122087c3c74c7dcf2c139be0634a26223fdc3ca91731333fd7c0c60880d50a0bfd0964736f6c6343000705003360806040523480156200001157600080fd5b50604080518082018252600d81526c2634b13930b93c902a37b5b2b760991b6020808301918252835180850190945260038452622624a160e91b90840152815191929183918391620000669160049162000223565b5080516200007c90600590602084019062000223565b50506006805461ff001960ff1990911660121716905550620000a96000620000a36200010f565b62000113565b620000d87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000a36200010f565b620001077f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620000a36200010f565b5050620002cf565b3390565b6200011f828262000123565b5050565b60008281526020818152604090912062000148918390620009f46200019c821b17901c565b156200011f57620001586200010f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001b3836001600160a01b038416620001bc565b90505b92915050565b6000620001ca83836200020b565b6200020257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001b6565b506000620001b6565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200025b5760008555620002a6565b82601f106200027657805160ff1916838001178555620002a6565b82800160010185558215620002a6579182015b82811115620002a657825182559160200191906001019062000289565b50620002b4929150620002b8565b5090565b5b80821115620002b45760008155600101620002b9565b61187f80620002df6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610367578063d547741f1461036f578063dd62ed3e14610382578063e63ab1e914610395576101b9565b8063a457c2d71461032e578063a9059cbb14610341578063ca15c87314610354576101b9565b80639010d07c116100d35780639010d07c146102eb57806391d148541461030b57806395d89b411461031e578063a217fddf14610326576101b9565b806370a08231146102bd57806379cc6790146102d05780638456cb59146102e3576101b9565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461028757806340c10f191461028f57806342966c68146102a25780635c975abb146102b5576101b9565b8063313ce5671461024c57806336568abe146102615780633950935114610274576101b9565b806323b872dd1161019757806323b872dd14610211578063248a9ca3146102245780632f2ff15d14610237576101b9565b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101fc575b600080fd5b6101c661039d565b6040516101d39190611500565b60405180910390f35b6101ef6101ea366004611454565b610433565b6040516101d391906114ec565b610204610451565b6040516101d391906114f7565b6101ef61021f366004611419565b610457565b61020461023236600461147d565b6104de565b61024a610245366004611495565b6104f6565b005b61025461055d565b6040516101d39190611553565b61024a61026f366004611495565b610566565b6101ef610282366004611454565b6105c7565b61024a610615565b61024a61029d366004611454565b610686565b61024a6102b036600461147d565b6106f7565b6101ef61070b565b6102046102cb3660046113cd565b610719565b61024a6102de366004611454565b610734565b61024a610789565b6102fe6102f93660046114b7565b6107f8565b6040516101d391906114d8565b6101ef610319366004611495565b610817565b6101c661082f565b610204610890565b6101ef61033c366004611454565b610895565b6101ef61034f366004611454565b6108fd565b61020461036236600461147d565b610911565b610204610928565b61024a61037d366004611495565b61094c565b6102046103903660046113e7565b6109a5565b6102046109d0565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905090565b6000610447610440610a09565b8484610a0d565b5060015b92915050565b60035490565b6000610464848484610af9565b6104d484610470610a09565b6104cf856040518060600160405280602881526020016116a9602891396001600160a01b038a166000908152600260205260408120906104ae610a09565b6001600160a01b031681526020810191909152604001600020549190610c56565b610a0d565b5060019392505050565b6000818152602081905260409020600201545b919050565b60008281526020819052604090206002015461051490610319610a09565b61054f5760405162461bcd60e51b815260040180806020018281038252602f8152602001806115a7602f913960400191505060405180910390fd5b6105598282610ced565b5050565b60065460ff1690565b61056e610a09565b6001600160a01b0316816001600160a01b0316146105bd5760405162461bcd60e51b815260040180806020018281038252602f8152602001806117f1602f913960400191505060405180910390fd5b6105598282610d56565b60006104476105d4610a09565b846104cf85600260006105e5610a09565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610dbf565b6106417f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610319610a09565b61067c5760405162461bcd60e51b81526004018080602001828103825260398152602001806115f86039913960400191505060405180910390fd5b610684610e19565b565b6106b27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610319610a09565b6106ed5760405162461bcd60e51b81526004018080602001828103825260368152602001806116d16036913960400191505060405180910390fd5b6105598282610ec6565b610708610702610a09565b82610fb8565b50565b600654610100900460ff1690565b6001600160a01b031660009081526001602052604090205490565b6000610766826040518060600160405280602481526020016117076024913961075f86610390610a09565b9190610c56565b905061077a83610774610a09565b83610a0d565b6107848383610fb8565b505050565b6107b57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610319610a09565b6107f05760405162461bcd60e51b81526004018080602001828103825260378152602001806117956037913960400191505060405180910390fd5b6106846110b4565b60008281526020819052604081206108109083611149565b9392505050565b60008281526020819052604081206108109083611155565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104295780601f106103fe57610100808354040283529160200191610429565b600081565b60006104476108a2610a09565b846104cf856040518060600160405280602581526020016117cc60259139600260006108cc610a09565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610c56565b600061044761090a610a09565b8484610af9565b600081815260208190526040812061044b9061116a565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b60008281526020819052604090206002015461096a90610319610a09565b6105bd5760405162461bcd60e51b81526004018080602001828103825260308152602001806116796030913960400191505060405180910390fd5b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000610810836001600160a01b038416611175565b3390565b6001600160a01b038316610a525760405162461bcd60e51b81526004018080602001828103825260248152602001806117716024913960400191505060405180910390fd5b6001600160a01b038216610a975760405162461bcd60e51b81526004018080602001828103825260228152602001806116316022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610b3e5760405162461bcd60e51b815260040180806020018281038252602581526020018061174c6025913960400191505060405180910390fd5b6001600160a01b038216610b835760405162461bcd60e51b81526004018080602001828103825260238152602001806115846023913960400191505060405180910390fd5b610b8e8383836111bf565b610bcb81604051806060016040528060268152602001611653602691396001600160a01b0386166000908152600160205260409020549190610c56565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610bfa9082610dbf565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ce55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610caa578181015183820152602001610c92565b50505050905090810190601f168015610cd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152602081905260409020610d0590826109f4565b1561055957610d12610a09565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020610d6e90826111ca565b1561055957610d7b610a09565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610810576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600654610100900460ff16610e75576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b6006805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610ea9610a09565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b038216610f21576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610f2d600083836111bf565b600354610f3a9082610dbf565b6003556001600160a01b038216600090815260016020526040902054610f609082610dbf565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610ffd5760405162461bcd60e51b815260040180806020018281038252602181526020018061172b6021913960400191505060405180910390fd5b611009826000836111bf565b611046816040518060600160405280602281526020016115d6602291396001600160a01b0385166000908152600160205260409020549190610c56565b6001600160a01b03831660009081526001602052604090205560035461106c90826111df565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600654610100900460ff1615611111576040805162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b6006805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ea9610a09565b60006108108383611221565b6000610810836001600160a01b038416611285565b600061044b8261129d565b60006111818383611285565b6111b75750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561044b565b50600061044b565b6107848383836112a1565b6000610810836001600160a01b0384166112f0565b600061081083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c56565b815460009082106112635760405162461bcd60e51b81526004018080602001828103825260228152602001806115626022913960400191505060405180910390fd5b82600001828154811061127257fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6112ac838383610784565b6112b461070b565b156107845760405162461bcd60e51b815260040180806020018281038252602a815260200180611820602a913960400191505060405180910390fd5b600081815260018301602052604081205480156113ac578354600019808301919081019060009087908390811061132357fe5b906000526020600020015490508087600001848154811061134057fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061137057fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061044b565b600091505061044b565b80356001600160a01b03811681146104f157600080fd5b6000602082840312156113de578081fd5b610810826113b6565b600080604083850312156113f9578081fd5b611402836113b6565b9150611410602084016113b6565b90509250929050565b60008060006060848603121561142d578081fd5b611436846113b6565b9250611444602085016113b6565b9150604084013590509250925092565b60008060408385031215611466578182fd5b61146f836113b6565b946020939093013593505050565b60006020828403121561148e578081fd5b5035919050565b600080604083850312156114a7578182fd5b82359150611410602084016113b6565b600080604083850312156114c9578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6000602080835283518082850152825b8181101561152c57858101830151858201604001528201611510565b8181111561153d5783604083870101525b50601f01601f1916929092016040019392505050565b60ff9190911681526020019056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220e94a27537ef9fdb73e7c1748fb89c500dc407dab1369da0078e22ecbc9e3183d64736f6c63430007050033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80631ba3192b14610039578063d46eb11914610064578063de0e9a3e1461006e575b600080fd5b34801561004557600080fd5b5061004e61008e565b60405161005b919061039f565b60405180910390f35b61006c61009d565b005b34801561007a57600080fd5b5061006c61008936600461034a565b61017e565b6000546001600160a01b031681565b600034116100c65760405162461bcd60e51b81526004016100bd906103b3565b60405180910390fd5b6000546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906340c10f19906101119033903490600401610386565b600060405180830381600087803b15801561012b57600080fd5b505af115801561013f573d6000803e3d6000fd5b505050507ff5bbfc7c33e2415d8412b58a8857448e349e08f7525154290968f731e86a90393334604051610174929190610386565b60405180910390a1565b6000811161019e5760405162461bcd60e51b81526004016100bd906103b3565b6000546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd906101eb90339030908690600401610362565b602060405180830381600087803b15801561020557600080fd5b505af1158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610323565b506000546040517f42966c680000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906342966c68906102879084906004016103ea565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505060405133925083156108fc02915083906000818181858888f193505050501580156102e6573d6000803e3d6000fd5b507fcddf2ba03463888346c0f626e3eb138f5990b099f6148e05f58835082b5c1d7f3382604051610318929190610386565b60405180910390a150565b600060208284031215610334578081fd5b81518015158114610343578182fd5b9392505050565b60006020828403121561035b578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0391909116815260200190565b6020808252601e908201527f5765206e65656420746f2077726170206174206c656173742031207765690000604082015260600190565b9081526020019056fea264697066735822122087c3c74c7dcf2c139be0634a26223fdc3ca91731333fd7c0c60880d50a0bfd0964736f6c63430007050033",
  "sourceMap": "105:650:3:-:0;;;266:42;;;;;;;;;;295:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;284:8:3;:20;;-1:-1:-1;;;;;;284:20:3;-1:-1:-1;;;;;284:20:3;;;;;;;;;;105:650;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "105:650:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;129:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:180;;;:::i;:::-;;500:251;;;;;;;;;;-1:-1:-1;500:251:3;;;;;:::i;:::-;;:::i;129:19::-;;;-1:-1:-1;;;;;129:19:3;;:::o;314:180::-;369:1;357:9;:13;349:56;;;;-1:-1:-1;;;349:56:3;;;;;;;:::i;:::-;;;;;;;;;409:8;;:36;;;;;-1:-1:-1;;;;;409:8:3;;;;:13;;:36;;423:10;;435:9;;409:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454;468:10;480:9;454:36;;;;;;;:::i;:::-;;;;;;;;314:180::o;500:251::-;555:1;547:5;:9;539:52;;;;-1:-1:-1;;;539:52:3;;;;;;;:::i;:::-;595:8;;:55;;;;;-1:-1:-1;;;;;595:8:3;;;;:21;;:55;;617:10;;637:4;;644:5;;595:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;654:8:3;;:20;;;;;-1:-1:-1;;;;;654:8:3;;;;:13;;:20;;668:5;;654:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;678:26:3;;:10;;-1:-1:-1;678:26:3;;;;;-1:-1:-1;698:5:3;;678:26;;;;698:5;678:10;:26;;;;;;;;;;;;;;;;;;;;;713:34;729:10;741:5;713:34;;;;;;;:::i;:::-;;;;;;;;500:251;:::o;14:297:19:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:19:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:19;;386:120;-1:-1:-1;386:120:19:o;511:406::-;-1:-1:-1;;;;;800:15:19;;;782:34;;852:15;;;;847:2;832:18;;825:43;899:2;884:18;;877:34;;;;709:2;694:18;;676:241::o;922:305::-;-1:-1:-1;;;;;1122:55:19;;;;1104:74;;1209:2;1194:18;;1187:34;1092:2;1077:18;;1059:168::o;1232:237::-;-1:-1:-1;;;;;1407:55:19;;;;1389:74;;1377:2;1362:18;;1344:125::o;1474:354::-;1676:2;1658:21;;;1715:2;1695:18;;;1688:30;1754:32;1749:2;1734:18;;1727:60;1819:2;1804:18;;1648:180::o;1833:177::-;1979:25;;;1967:2;1952:18;;1934:76::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7.0;\npragma abicoder v2;\n\nimport \"./LIB.sol\";\n\ncontract LIBWrapper {\n\n\tLIB public LIBToken;\n\n    event LogETHWrapped(address sender, uint256 amount);\n\tevent LogETHUnwrapped(address sender, uint256 amount);\n\n\tconstructor() {\n\t\tLIBToken = new LIB();\n\t}\n\n    function wrap() public payable {\n\t\trequire(msg.value > 0, \"We need to wrap at least 1 wei\");\n\t\tLIBToken.mint(msg.sender, msg.value);\n\t\temit LogETHWrapped(msg.sender, msg.value);\n\t}\n\n    function unwrap(uint value) public {\n\t\trequire(value > 0, \"We need to wrap at least 1 wei\");\n\t\tLIBToken.transferFrom(msg.sender, address(this), value);\n\t\tLIBToken.burn(value);\n\t\tmsg.sender.transfer(value);\n\t\temit LogETHUnwrapped(msg.sender, value);\n\t}\n\n\n}",
  "sourcePath": "/Users/ognyanchikov/Projects/Library - course/contracts/LIBWrapper.sol",
  "ast": {
    "absolutePath": "/Users/ognyanchikov/Projects/Library - course/contracts/LIBWrapper.sol",
    "exportedSymbols": {
      "AccessControl": [
        1034
      ],
      "Address": [
        2396
      ],
      "Context": [
        751
      ],
      "ERC20": [
        1978
      ],
      "ERC20Burnable": [
        2037
      ],
      "ERC20Pausable": [
        2074
      ],
      "ERC20PresetMinterPauser": [
        1475
      ],
      "EnumerableSet": [
        2876
      ],
      "IERC20": [
        2152
      ],
      "LIB": [
        422
      ],
      "LIBWrapper": [
        524
      ],
      "Pausable": [
        2966
      ],
      "SafeMath": [
        1339
      ]
    },
    "id": 525,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 424,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:3"
      },
      {
        "id": 425,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:19:3"
      },
      {
        "absolutePath": "/Users/ognyanchikov/Projects/Library - course/contracts/LIB.sol",
        "file": "./LIB.sol",
        "id": 426,
        "nodeType": "ImportDirective",
        "scope": 525,
        "sourceUnit": 423,
        "src": "84:19:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          422
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 524,
        "linearizedBaseContracts": [
          524
        ],
        "name": "LIBWrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1ba3192b",
            "id": 428,
            "mutability": "mutable",
            "name": "LIBToken",
            "nodeType": "VariableDeclaration",
            "scope": 524,
            "src": "129:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LIB_$422",
              "typeString": "contract LIB"
            },
            "typeName": {
              "id": 427,
              "name": "LIB",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 422,
              "src": "129:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$422",
                "typeString": "contract LIB"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 434,
            "name": "LogETHWrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "175:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "191:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "174:32:3"
            },
            "src": "155:52:3"
          },
          {
            "anonymous": false,
            "id": 440,
            "name": "LogETHUnwrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "231:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "247:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "230:32:3"
            },
            "src": "209:54:3"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "280:28:3",
              "statements": [
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 443,
                      "name": "LIBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "284:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$422",
                        "typeString": "contract LIB"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "295:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LIB_$422_$",
                          "typeString": "function () returns (contract LIB)"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "LIB",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 422,
                          "src": "299:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$422",
                            "typeString": "contract LIB"
                          }
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "295:9:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$422",
                        "typeString": "contract LIB"
                      }
                    },
                    "src": "284:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LIB_$422",
                      "typeString": "contract LIB"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "284:20:3"
                }
              ]
            },
            "id": 450,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:2:3"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:3"
            },
            "scope": 524,
            "src": "266:42:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "345:149:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 454,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "357:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "357:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "369:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "357:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c65617374203120776569",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "372:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        },
                        "value": "We need to wrap at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "349:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "349:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "423:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "423:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "435:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "435:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 461,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "409:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1419,
                      "src": "409:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "409:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 471,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "468:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "468:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "480:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "480:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 470,
                      "name": "LogETHWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "454:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "449:41:3"
                }
              ]
            },
            "functionSelector": "d46eb119",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:3"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:3"
            },
            "scope": 524,
            "src": "314:180:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "535:216:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 484,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "547:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "555:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "547:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c65617374203120776569",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "558:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        },
                        "value": "We need to wrap at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "539:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "539:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "617:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "617:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 497,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "637:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIBWrapper_$524",
                              "typeString": "contract LIBWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIBWrapper_$524",
                              "typeString": "contract LIBWrapper"
                            }
                          ],
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "629:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "629:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "629:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 499,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "644:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "595:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1676,
                      "src": "595:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "595:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "668:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 502,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "654:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2003,
                      "src": "654:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "654:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "698:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "678:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "678:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "678:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "678:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 517,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "729:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "729:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 519,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "741:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 516,
                      "name": "LogETHUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "713:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "EmitStatement",
                  "src": "708:39:3"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "516:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "515:12:3"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:3"
            },
            "scope": 524,
            "src": "500:251:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 525,
        "src": "105:650:3"
      }
    ],
    "src": "39:716:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/ognyanchikov/Projects/Library - course/contracts/LIBWrapper.sol",
    "exportedSymbols": {
      "AccessControl": [
        1034
      ],
      "Address": [
        2396
      ],
      "Context": [
        751
      ],
      "ERC20": [
        1978
      ],
      "ERC20Burnable": [
        2037
      ],
      "ERC20Pausable": [
        2074
      ],
      "ERC20PresetMinterPauser": [
        1475
      ],
      "EnumerableSet": [
        2876
      ],
      "IERC20": [
        2152
      ],
      "LIB": [
        422
      ],
      "LIBWrapper": [
        524
      ],
      "Pausable": [
        2966
      ],
      "SafeMath": [
        1339
      ]
    },
    "id": 525,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 424,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:3"
      },
      {
        "id": 425,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:19:3"
      },
      {
        "absolutePath": "/Users/ognyanchikov/Projects/Library - course/contracts/LIB.sol",
        "file": "./LIB.sol",
        "id": 426,
        "nodeType": "ImportDirective",
        "scope": 525,
        "sourceUnit": 423,
        "src": "84:19:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          422
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 524,
        "linearizedBaseContracts": [
          524
        ],
        "name": "LIBWrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1ba3192b",
            "id": 428,
            "mutability": "mutable",
            "name": "LIBToken",
            "nodeType": "VariableDeclaration",
            "scope": 524,
            "src": "129:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LIB_$422",
              "typeString": "contract LIB"
            },
            "typeName": {
              "id": 427,
              "name": "LIB",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 422,
              "src": "129:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LIB_$422",
                "typeString": "contract LIB"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 434,
            "name": "LogETHWrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "175:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "191:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "191:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "174:32:3"
            },
            "src": "155:52:3"
          },
          {
            "anonymous": false,
            "id": 440,
            "name": "LogETHUnwrapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "231:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "247:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "230:32:3"
            },
            "src": "209:54:3"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "280:28:3",
              "statements": [
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 443,
                      "name": "LIBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "284:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$422",
                        "typeString": "contract LIB"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "295:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LIB_$422_$",
                          "typeString": "function () returns (contract LIB)"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "LIB",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 422,
                          "src": "299:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LIB_$422",
                            "typeString": "contract LIB"
                          }
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "295:9:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LIB_$422",
                        "typeString": "contract LIB"
                      }
                    },
                    "src": "284:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LIB_$422",
                      "typeString": "contract LIB"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "284:20:3"
                }
              ]
            },
            "id": 450,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:2:3"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:3"
            },
            "scope": 524,
            "src": "266:42:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "345:149:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 454,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "357:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "357:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "369:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "357:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c65617374203120776569",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "372:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        },
                        "value": "We need to wrap at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        }
                      ],
                      "id": 453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "349:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "349:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 464,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "423:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "423:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "435:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "435:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 461,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "409:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1419,
                      "src": "409:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "409:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 471,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "468:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "468:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "480:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "480:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 470,
                      "name": "LogETHWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "454:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "449:41:3"
                }
              ]
            },
            "functionSelector": "d46eb119",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:3"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:3"
            },
            "scope": 524,
            "src": "314:180:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "535:216:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 484,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "547:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "555:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "547:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5765206e65656420746f2077726170206174206c65617374203120776569",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "558:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        },
                        "value": "We need to wrap at least 1 wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40990e3720a38a3dc06c40020f57d04684c1e35f21ddb31ac93a3f5fc7f6910f",
                          "typeString": "literal_string \"We need to wrap at least 1 wei\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "539:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "539:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "617:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "617:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 497,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "637:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LIBWrapper_$524",
                              "typeString": "contract LIBWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LIBWrapper_$524",
                              "typeString": "contract LIBWrapper"
                            }
                          ],
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "629:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 495,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "629:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "629:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 499,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "644:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "595:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1676,
                      "src": "595:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "595:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "668:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 502,
                        "name": "LIBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "654:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LIB_$422",
                          "typeString": "contract LIB"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2003,
                      "src": "654:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "654:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "698:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "678:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "678:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "678:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "678:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 517,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "729:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "729:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 519,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "741:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 516,
                      "name": "LogETHUnwrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "713:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "EmitStatement",
                  "src": "708:39:3"
                }
              ]
            },
            "functionSelector": "de0e9a3e",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "516:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "515:12:3"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:3"
            },
            "scope": 524,
            "src": "500:251:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 525,
        "src": "105:650:3"
      }
    ],
    "src": "39:716:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang",
    "optimizer": true,
    "runs": 999
  },
  "networks": {},
  "schemaVersion": "2.3.3",
  "updatedAt": "2021-01-28T08:11:07.107Z"
}